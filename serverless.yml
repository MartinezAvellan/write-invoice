service: write-invoice

frameworkVersion: '3'

custom:
  sqs: write-invoice
  dlq: write-invoice-dlq

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.8
  stage: prd
  region: sa-east-1
  tags:
    Product: ${self:service}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
            - dynamodb:*
            - sqs:*
          Resource: "*"

functions:
  finalizeprocess:
    handler: handler.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - MainQueue
              - Arn

    deadLetter:
      targetArn:
        GetResourceArn: DeadLetterQueue

resources:
  Resources:
        MainQueue:
            Type: AWS::SQS::Queue
            Properties:
                FifoQueue: True
                QueueName: ${self:custom.sqs}
                RedrivePolicy:
                  deadLetterTargetArn:
                    Fn::GetAtt:
                      - "DeadLetterQueue"
                      - "Arn"
                  maxReceiveCount: 5
        DeadLetterQueue:
            Type: AWS::SQS::Queue
            Properties:
                QueueName: ${self:custom.dlq}